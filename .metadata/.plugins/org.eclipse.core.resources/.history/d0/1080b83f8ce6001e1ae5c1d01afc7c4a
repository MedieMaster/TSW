import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Font;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;

public class SucheGUI {

	private Medienverwaltung mv;
	private List<Medium> m = new ArrayList<Medium>();
	
	public SucheGUI(Medienverwaltung mv) {
		this.mv = mv;
	}
	
	public Component getGUI() {
	
		Font font = new Font("Arial", Font.PLAIN, 30);
		JPanel mainPanel = new JPanel(new BorderLayout());
		JPanel p1 = new JPanel(new BorderLayout());
		JPanel p2 = new JPanel(new BorderLayout());
		JPanel p3 = new JPanel(new GridLayout(4,1, 0, 10));
		JPanel p4 = new JPanel(new BorderLayout());
		JLabel name = new JLabel("Name: ");
		JTextField tf = new JTextField(19);
		JButton suchen = new JButton("Suchen");
		JButton loeschen = new JButton("Löschen");
		JButton hinzufuegen = new JButton("Hinzufügen");
		JList<Medium> list = new JList<Medium>();
		JLabel invis = new JLabel();
		String[] cString = {"Alle", "Bilder", "Video", "Musik"};
		JComboBox<String> cbox = new JComboBox<String>(cString);
		
		loeschen.setEnabled(false);
		hinzufuegen.setEnabled(false);
		
		suchen.addActionListener(e -> {
			
			m = mv.suchen(tf.getText(), cbox.getSelectedIndex());	
			Medium[] ma = m.toArray(new Medium[0]);
			
			list.setCellRenderer(new CellRenderer());
			list.setListData(ma);
			
			tf.setText("");
			
		});
		
		loeschen.addActionListener(e -> {
			
			mv.deleteMedium(m.get(list.getSelectedIndex()));
			
			m.remove(list.getSelectedIndex());
			
			list.setCellRenderer(new CellRenderer());
		});
		
		hinzufuegen.addActionListener(e ->{
			List<Playlist> plist = mv.getPlaylistenListe();
			JList<String> playlist = new JList<String>();
			String[] play1 = new String[plist.size()];
			playlist.setListData(play1);
			JOptionPane op = new JOptionPane();
			
			for(int i=0; i<plist.size(); i++) {
				play1[i] = plist.get(i).getTitle();
			}
			playlist.setListData(play1);

			op.showMessageDialog(null, playlist);	
			
			plist.get(playlist.getSelectedIndex()).add(m.get(list.getSelectedIndex()));
		
			
			
		});
		
		list.addListSelectionListener(e ->{
			
			if(list.isSelectionEmpty()) {
				loeschen.setEnabled(false);
				hinzufuegen.setEnabled(false);
			}
			else {
				loeschen.setEnabled(true);
				hinzufuegen.setEnabled(true);
			}
			
		});
		
		
		name.setFont(font);
		tf.setFont(font);
		
		p1.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
		p2.setBorder(BorderFactory.createEmptyBorder(0,10,10,10));
		p4.setBorder(BorderFactory.createEmptyBorder(0,0,0,20));
		JScrollPane scroll = new JScrollPane(list);
		
		p1.add(name, BorderLayout.LINE_START);
		p1.add(tf, BorderLayout.CENTER);
		p3.add(suchen);
		p3.add(loeschen);
		p3.add(hinzufuegen);
		p3.add(cbox);
		p4.add(p3, BorderLayout.PAGE_START);
		p4.add(invis, BorderLayout.CENTER);
		p2.add(scroll, BorderLayout.CENTER);
		p2.add(p4, BorderLayout.WEST);
		mainPanel.add(p1, BorderLayout.PAGE_START);
		mainPanel.add(p2, BorderLayout.CENTER);
		
		return mainPanel;
		
	}
	
}